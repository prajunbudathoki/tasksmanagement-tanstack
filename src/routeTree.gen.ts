/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignupRouteImport } from './routes/auth/Signup'
import { Route as AuthSigninRouteImport } from './routes/auth/Signin'
import { ServerRoute as ApiAuthServerRouteImport } from './routes/api/auth'

const rootServerRouteImport = createServerRootRoute()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/Signup',
  path: '/Signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/Signin',
  path: '/Signin',
  getParentRoute: () => AuthRoute,
} as any)
const ApiAuthServerRoute = ApiAuthServerRouteImport.update({
  id: '/api/auth',
  path: '/api/auth',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/Signin': typeof AuthSigninRoute
  '/auth/Signup': typeof AuthSignupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/Signin': typeof AuthSigninRoute
  '/auth/Signup': typeof AuthSignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/Signin': typeof AuthSigninRoute
  '/auth/Signup': typeof AuthSignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/auth/Signin' | '/auth/Signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/auth/Signin' | '/auth/Signup'
  id: '__root__' | '/' | '/auth' | '/auth/Signin' | '/auth/Signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/auth': typeof ApiAuthServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth': typeof ApiAuthServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth': typeof ApiAuthServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth'
  id: '__root__' | '/api/auth'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthServerRoute: typeof ApiAuthServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/Signup': {
      id: '/auth/Signup'
      path: '/Signup'
      fullPath: '/auth/Signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/Signin': {
      id: '/auth/Signin'
      path: '/Signin'
      fullPath: '/auth/Signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth': {
      id: '/api/auth'
      path: '/api/auth'
      fullPath: '/api/auth'
      preLoaderRoute: typeof ApiAuthServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthServerRoute: ApiAuthServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
